# File contains compiler definitions, flags, etc.

# TODO: Check Makefile and add compielr flags for Intel, GNU GCC, PGI, Clang etc.
# Intel
if(CMAKE_C_COMPILER_ID MATCHES Intel)
	set(CMAKE_C_FLAGS_RELEASE					"${CMAKE_C_FLAGS_RELEASE}")
	set(CMAKE_C_FLAGS_DEBUG						"${CMAKE_C_FLAGS_DEBUG}")
	set(CMAKE_C_FLAGS_RELWITHDEBINFO	"${CMAKE_C_FLAGS_RELWITHDEBINFO}")
	set(CMAKE_C_FLAGS_MINSIZEREL			"${CMAKE_C_FLAGS_MINSIZEREL}")
elseif(CMAKE_C_COMPILER_ID MATCHES GNU)
	set(CMAKE_C_FLAGS_RELEASE					"${CMAKE_C_FLAGS_RELEASE} -Dg77Fortran")
	set(CMAKE_C_FLAGS_DEBUG						"${CMAKE_C_FLAGS_DEBUG} -Dg77Fortran")
	set(CMAKE_C_FLAGS_RELWITHDEBINFO	"${CMAKE_C_FLAGS_RELWITHDEBINFO} -Dg77Fortran")
	set(CMAKE_C_FLAGS_MINSIZEREL			"${CMAKE_C_FLAGS_MINSIZEREL} -Dg77Fortran")
elseif(CMAKE_C_COMPILER_ID MATCHES Clang)
	set(CMAKE_C_FLAGS_RELEASE					"${CMAKE_C_FLAGS_RELEASE}")
	set(CMAKE_C_FLAGS_DEBUG						"${CMAKE_C_FLAGS_DEBUG}")
	set(CMAKE_C_FLAGS_RELWITHDEBINFO	"${CMAKE_C_FLAGS_RELWITHDEBINFO}")
	set(CMAKE_C_FLAGS_MINSIZEREL			"${CMAKE_C_FLAGS_MINSIZEREL}")
elseif(CMAKE_C_COMPILER_ID MATCHES AppleClang)
	set(CMAKE_C_FLAGS_RELEASE					"${CMAKE_C_FLAGS_RELEASE}")
	set(CMAKE_C_FLAGS_DEBUG						"${CMAKE_C_FLAGS_DEBUG}")
	set(CMAKE_C_FLAGS_RELWITHDEBINFO	"${CMAKE_C_FLAGS_RELWITHDEBINFO}")
	set(CMAKE_C_FLAGS_MINSIZEREL			"${CMAKE_C_FLAGS_MINSIZEREL}")
elseif(CMAKE_C_COMPILER_ID MATCHES PGI)
	set(CMAKE_C_FLAGS_RELEASE					"${CMAKE_C_FLAGS_RELEASE}")
	set(CMAKE_C_FLAGS_DEBUG						"${CMAKE_C_FLAGS_DEBUG}")
	set(CMAKE_C_FLAGS_RELWITHDEBINFO	"${CMAKE_C_FLAGS_RELWITHDEBINFO}")
	set(CMAKE_C_FLAGS_MINSIZEREL			"${CMAKE_C_FLAGS_MINSIZEREL}")
endif()
message(STATUS ${CMAKE_C_COMPILER_ID})
message(${CMAKE_C_FLAGS_RELEASE})
message(${CMAKE_C_FLAGS_RELWITHDEBINFO})
message(${CMAKE_C_FLAGS_DEBUG})
message(${CMAKE_C_FLAGS_MINSIZEREL})
